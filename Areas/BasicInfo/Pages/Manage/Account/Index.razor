@page "/BasicInfo/Manage/Account"
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Identity.EntityFrameworkCore
@attribute [Authorize(Roles = "Admin")]

@inject UserManager<User> _userManager
<div class="mat-layout-grid">
            <div class="mat-layout-grid-inner">
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-4">
                    <MatButton Icon="add" Link="/BasicInfo/Manage/Account/Create">添加补选</MatButton>

                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-8">
                    <MatPaginator Length="@size" PageSize="@pageSize" Page="OnPage"></MatPaginator>

                </div>
            </div>
        </div>
 <table class="table">
       
        <thead>
            <tr>
                <th scope="col">用户名</th>
                <th scope="col">身份</th>
                <th scope="col">姓名</th>
                <th scope="col">性别</th>
                <th scope="col">所属单位</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @if(users != null){
                  foreach(var user in users){
                    <tr>
                        <td>@user.UserName</td>
                        <td>@String.Join(", ", user.Roles)</td>
                        <td>@user.Name</td>
                        <td>@user.Sex</td>
                        <td>@user.Belong</td>
                        <td><a href="/BasicInfo/Manage/Account/Edit/@user.Id">编辑</a>|<button type="button" class="btn btn-link" @onclick="@(_ => {userToDelete=user;dialogIsOpen=true;})">删除</button></td>
                    </tr>
                  
                }
            }else {
                <div class="spinner-border" role="status">
                    <span class="sr-only">加载中……</span>
                </div>
            }
            
        </tbody>
    </table>
    <MatDialog @bind-IsOpen="@dialogIsOpen">
        <MatDialogTitle>删除用户</MatDialogTitle>
        <MatDialogContent>
            <p>真的要删除 @userToDelete?.UserName 吗？这个操作无法恢复</p>
        </MatDialogContent>
        <MatDialogActions>
            <MatButton OnClick="@(e => { dialogIsOpen = false; })">否</MatButton>
            <MatButton OnClick="@DeleteUser">删除</MatButton>
        </MatDialogActions>
    </MatDialog>

@code {
    int page = 0;
    int pageSize = 25;
    int size = 0;
    bool dialogIsOpen = false;
    IEnumerable<User> users;
    User userToDelete = null;
    async Task OnPage(MatPaginatorPageEvent e)
    {
        pageSize = e.PageSize;
        page = e.PageIndex;
        await UpdateList();
        StateHasChanged();
    }
    async Task DeleteUser() {
        await _userManager.DeleteAsync(userToDelete);
        await UpdateList();
        dialogIsOpen = false;
    }
    async Task UpdateList()
    {
        users = await _userManager.Users.Skip(page * pageSize).Take(pageSize).ToListAsync();
        await Task.WhenAll(users.Select(async u =>
        {
            u.Roles = await _userManager.GetRolesAsync(u);
        }));
    }
    protected override async Task OnInitializedAsync()
    {
        size = await _userManager.Users.CountAsync();
        await UpdateList();
        
    }
}