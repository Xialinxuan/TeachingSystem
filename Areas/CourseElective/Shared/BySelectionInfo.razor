
@using System.ComponentModel.DataAnnotations
@using System.IO
@using System.Net.Http.Headers
@using Microsoft.AspNetCore.Identity;

@inject IMatToaster Toaster

<EditForm Model="Selection" OnValidSubmit="Save">
    <DataAnnotationsValidator/>
        <p>
            <MatTextField Label="课id" @bind-Value="Selection.CourseBy_SelectionId" FullWidth="true" ReadOnly="@(!create)"/>
        </p>
        <p>
            <MatTextField Label="课程名" @bind-Value="Selection.ClassId" FullWidth="true" ReadOnly="@(!create)"/>
        </p>
        <p>
            <MatTextField Label="课程名称" @bind-Value="Selection.Name" FullWidth="true"/>
        </p>
        <p style="text-align: center">
            <MatButton Type="submit" Raised="true">保存</MatButton>
        </p>
            
</EditForm>


 
@code {

    [Parameter]
    public bool create{get;set;} = false;

    [Parameter]
    public bool admin{get;set;} = false;

    [Parameter]
    public string id{get;set;}

    [Parameter]
    public Action OnSave{get;set;}

    CourseBy_Selection Selection;

    

    async Task Save() {
        if(create) {
            if(await DbContext.CourseBy_Selection.Where(c => c.ClassId == Selection.ClassId).CountAsync() != 0) {
                Toaster.Add("已存在同样课号的课程，请修改。", MatToastType.Danger);

            }else {
                await DbContext.CourseBy_Selection.AddAsync(Selection);
                await DbContext.SaveChangesAsync();

                OnSave();
            }
        }else{
            await DbContext.SaveChangesAsync();
            OnSave();
        }
            

    }

    protected override async Task OnInitializedAsync() {

        if(create) {
            Selection = new CourseBy_Selection();
        } else {
            Selection = await DbContext.CourseBy_Selection.SingleAsync(c => c.CourseBy_SelectionId == id);
        }
    }
   
}
 
